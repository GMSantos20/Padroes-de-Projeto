// âœ… ISSO Ã© um Mediator - ele centraliza a comunicaÃ§Ã£o
public class ControladorTransito implements Mediator {
    private Carro carro;
    private Semaforo semaforo;
    private Pedestre pedestre;

    public void registrarCarro(Carro carro) {
        this.carro = carro;
        this.carro.setMediator(this); // ðŸ”‘ Cada objeto conhece o mediator
    }

    public void registrarSemaforo(Semaforo semaforo) {
        this.semaforo = semaforo;
        this.semaforo.setMediator(this);
    }

    public void registrarPedestre(Pedestre pedestre) {
        this.pedestre = pedestre;
        this.pedestre.setMediator(this);
    }

    // ðŸ”‘ O mediator conhece as regras de negÃ³cio
    @Override
    public void notificar(String evento, Object origem) {
        if (evento.equals("SEMAFORO_VERDE")) {
            carro.avancar();
            pedestre.esperar();
        } else if (evento.equals("SEMAFORO_VERMELHO")) {
            carro.parar();
            pedestre.cruzar();
        }
    }
}

// ðŸ”‘ Interface do Mediator
public interface Mediator {
    void notificar(String evento, Object origem);
}

// ðŸ”‘ Objetos nÃ£o se comunicam diretamente
public class Carro {
    private Mediator mediator;

    public void setMediator(Mediator mediator) {
        this.mediator = mediator;
    }

    public void avancar() {
        System.out.println("Carro avanÃ§ando");
    }

    public void parar() {
        System.out.println("Carro parando");
    }

    // Em vez de falar com Semaforo diretamente, notifica o mediator
    public void sensorSemaforo() {
        mediator.notificar("CARRO_NO_SEMAFORO", this);
    }
}

public class Semaforo {
    private Mediator mediator;

    public void setMediator(Mediator mediator) {
        this.mediator = mediator;
    }

    public void mudarParaVerde() {
        System.out.println("Semaforo verde");
        mediator.notificar("SEMAFORO_VERDE", this); // ðŸ”‘ Notifica o mediator
    }

    public void mudarParaVermelho() {
        System.out.println("Semaforo vermelho");
        mediator.notificar("SEMAFORO_VERMELHO", this);
    }
}

// âœ… MAIN agora sÃ³ configura o sistema
public class Main {
    public static void main(String[] args) {
        // Cria o mediator
        ControladorTransito mediator = new ControladorTransito();

        // Cria os objetos
        Carro carro = new Carro();
        Semaforo semaforo = new Semaforo();
        Pedestre pedestre = new Pedestre();

        // Registra no mediator
        mediator.registrarCarro(carro);
        mediator.registrarSemaforo(semaforo);
        mediator.registrarPedestre(pedestre);

        // Agora os objetos se comunicam atravÃ©s do mediator
        semaforo.mudarParaVerde();   // â†’ Notifica mediator â†’ Carro avanÃ§a
        semaforo.mudarParaVermelho(); // â†’ Notifica mediator â†’ Pedestre cruza
    }
}